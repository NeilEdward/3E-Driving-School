/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as SandboxRouteRouteImport } from './routes/sandbox/route'
import { Route as _authenticatedRouteRouteImport } from './routes/__authenticated/route'
import { Route as _authRouteRouteImport } from './routes/__auth/route'
import { Route as _authenticatedIndexRouteImport } from './routes/__authenticated/index'
import { Route as _authRegisterRouteImport } from './routes/__auth/register'
import { Route as _authLoginRouteImport } from './routes/__auth/login'
import { Route as _authenticatedDashboardIndexRouteImport } from './routes/__authenticated/dashboard/index'
import { Route as _authenticatedAdminMasterlistsInstructorsRouteImport } from './routes/__authenticated/admin/masterlists/instructors'
import { Route as _authenticatedAdminMasterlistsBranchesRouteImport } from './routes/__authenticated/admin/masterlists/branches'
import { Route as _authenticatedAdminOperationsStudentsRouteImport } from './routes/__authenticated/admin/_operations/students'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const SandboxRouteRoute = SandboxRouteRouteImport.update({
  id: '/sandbox',
  path: '/sandbox',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedRouteRoute = _authenticatedRouteRouteImport.update({
  id: '/__authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRouteRoute = _authRouteRouteImport.update({
  id: '/__auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedIndexRoute = _authenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _authenticatedRouteRoute,
} as any)
const _authRegisterRoute = _authRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => _authRouteRoute,
} as any)
const _authLoginRoute = _authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => _authRouteRoute,
} as any)
const _authenticatedDashboardIndexRoute =
  _authenticatedDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => _authenticatedRouteRoute,
  } as any)
const _authenticatedAdminMasterlistsInstructorsRoute =
  _authenticatedAdminMasterlistsInstructorsRouteImport.update({
    id: '/admin/masterlists/instructors',
    path: '/admin/masterlists/instructors',
    getParentRoute: () => _authenticatedRouteRoute,
  } as any)
const _authenticatedAdminMasterlistsBranchesRoute =
  _authenticatedAdminMasterlistsBranchesRouteImport.update({
    id: '/admin/masterlists/branches',
    path: '/admin/masterlists/branches',
    getParentRoute: () => _authenticatedRouteRoute,
  } as any)
const _authenticatedAdminOperationsStudentsRoute =
  _authenticatedAdminOperationsStudentsRouteImport.update({
    id: '/admin/_operations/students',
    path: '/admin/students',
    getParentRoute: () => _authenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/sandbox': typeof SandboxRouteRoute
  '/about': typeof AboutRoute
  '/login': typeof _authLoginRoute
  '/register': typeof _authRegisterRoute
  '/': typeof _authenticatedIndexRoute
  '/dashboard': typeof _authenticatedDashboardIndexRoute
  '/admin/students': typeof _authenticatedAdminOperationsStudentsRoute
  '/admin/masterlists/branches': typeof _authenticatedAdminMasterlistsBranchesRoute
  '/admin/masterlists/instructors': typeof _authenticatedAdminMasterlistsInstructorsRoute
}
export interface FileRoutesByTo {
  '/sandbox': typeof SandboxRouteRoute
  '/about': typeof AboutRoute
  '/login': typeof _authLoginRoute
  '/register': typeof _authRegisterRoute
  '/': typeof _authenticatedIndexRoute
  '/dashboard': typeof _authenticatedDashboardIndexRoute
  '/admin/students': typeof _authenticatedAdminOperationsStudentsRoute
  '/admin/masterlists/branches': typeof _authenticatedAdminMasterlistsBranchesRoute
  '/admin/masterlists/instructors': typeof _authenticatedAdminMasterlistsInstructorsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__auth': typeof _authRouteRouteWithChildren
  '/__authenticated': typeof _authenticatedRouteRouteWithChildren
  '/sandbox': typeof SandboxRouteRoute
  '/about': typeof AboutRoute
  '/__auth/login': typeof _authLoginRoute
  '/__auth/register': typeof _authRegisterRoute
  '/__authenticated/': typeof _authenticatedIndexRoute
  '/__authenticated/dashboard/': typeof _authenticatedDashboardIndexRoute
  '/__authenticated/admin/_operations/students': typeof _authenticatedAdminOperationsStudentsRoute
  '/__authenticated/admin/masterlists/branches': typeof _authenticatedAdminMasterlistsBranchesRoute
  '/__authenticated/admin/masterlists/instructors': typeof _authenticatedAdminMasterlistsInstructorsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sandbox'
    | '/about'
    | '/login'
    | '/register'
    | '/'
    | '/dashboard'
    | '/admin/students'
    | '/admin/masterlists/branches'
    | '/admin/masterlists/instructors'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sandbox'
    | '/about'
    | '/login'
    | '/register'
    | '/'
    | '/dashboard'
    | '/admin/students'
    | '/admin/masterlists/branches'
    | '/admin/masterlists/instructors'
  id:
    | '__root__'
    | '/__auth'
    | '/__authenticated'
    | '/sandbox'
    | '/about'
    | '/__auth/login'
    | '/__auth/register'
    | '/__authenticated/'
    | '/__authenticated/dashboard/'
    | '/__authenticated/admin/_operations/students'
    | '/__authenticated/admin/masterlists/branches'
    | '/__authenticated/admin/masterlists/instructors'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _authRouteRoute: typeof _authRouteRouteWithChildren
  _authenticatedRouteRoute: typeof _authenticatedRouteRouteWithChildren
  SandboxRouteRoute: typeof SandboxRouteRoute
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sandbox': {
      id: '/sandbox'
      path: '/sandbox'
      fullPath: '/sandbox'
      preLoaderRoute: typeof SandboxRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticated': {
      id: '/__authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticated/': {
      id: '/__authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _authenticatedIndexRouteImport
      parentRoute: typeof _authenticatedRouteRoute
    }
    '/__auth/register': {
      id: '/__auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof _authRegisterRouteImport
      parentRoute: typeof _authRouteRoute
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authLoginRouteImport
      parentRoute: typeof _authRouteRoute
    }
    '/__authenticated/dashboard/': {
      id: '/__authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof _authenticatedDashboardIndexRouteImport
      parentRoute: typeof _authenticatedRouteRoute
    }
    '/__authenticated/admin/masterlists/instructors': {
      id: '/__authenticated/admin/masterlists/instructors'
      path: '/admin/masterlists/instructors'
      fullPath: '/admin/masterlists/instructors'
      preLoaderRoute: typeof _authenticatedAdminMasterlistsInstructorsRouteImport
      parentRoute: typeof _authenticatedRouteRoute
    }
    '/__authenticated/admin/masterlists/branches': {
      id: '/__authenticated/admin/masterlists/branches'
      path: '/admin/masterlists/branches'
      fullPath: '/admin/masterlists/branches'
      preLoaderRoute: typeof _authenticatedAdminMasterlistsBranchesRouteImport
      parentRoute: typeof _authenticatedRouteRoute
    }
    '/__authenticated/admin/_operations/students': {
      id: '/__authenticated/admin/_operations/students'
      path: '/admin/students'
      fullPath: '/admin/students'
      preLoaderRoute: typeof _authenticatedAdminOperationsStudentsRouteImport
      parentRoute: typeof _authenticatedRouteRoute
    }
  }
}

interface _authRouteRouteChildren {
  _authLoginRoute: typeof _authLoginRoute
  _authRegisterRoute: typeof _authRegisterRoute
}

const _authRouteRouteChildren: _authRouteRouteChildren = {
  _authLoginRoute: _authLoginRoute,
  _authRegisterRoute: _authRegisterRoute,
}

const _authRouteRouteWithChildren = _authRouteRoute._addFileChildren(
  _authRouteRouteChildren,
)

interface _authenticatedRouteRouteChildren {
  _authenticatedIndexRoute: typeof _authenticatedIndexRoute
  _authenticatedDashboardIndexRoute: typeof _authenticatedDashboardIndexRoute
  _authenticatedAdminOperationsStudentsRoute: typeof _authenticatedAdminOperationsStudentsRoute
  _authenticatedAdminMasterlistsBranchesRoute: typeof _authenticatedAdminMasterlistsBranchesRoute
  _authenticatedAdminMasterlistsInstructorsRoute: typeof _authenticatedAdminMasterlistsInstructorsRoute
}

const _authenticatedRouteRouteChildren: _authenticatedRouteRouteChildren = {
  _authenticatedIndexRoute: _authenticatedIndexRoute,
  _authenticatedDashboardIndexRoute: _authenticatedDashboardIndexRoute,
  _authenticatedAdminOperationsStudentsRoute:
    _authenticatedAdminOperationsStudentsRoute,
  _authenticatedAdminMasterlistsBranchesRoute:
    _authenticatedAdminMasterlistsBranchesRoute,
  _authenticatedAdminMasterlistsInstructorsRoute:
    _authenticatedAdminMasterlistsInstructorsRoute,
}

const _authenticatedRouteRouteWithChildren =
  _authenticatedRouteRoute._addFileChildren(_authenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _authRouteRoute: _authRouteRouteWithChildren,
  _authenticatedRouteRoute: _authenticatedRouteRouteWithChildren,
  SandboxRouteRoute: SandboxRouteRoute,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
