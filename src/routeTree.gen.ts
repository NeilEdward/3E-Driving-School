/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as _authenticatedIndexRouteImport } from './routes/__authenticated/index'
import { Route as _authRegisterRouteImport } from './routes/__auth/register'
import { Route as _authLoginRouteImport } from './routes/__auth/login'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const _authenticatedIndexRoute = _authenticatedIndexRouteImport.update({
  id: '/__authenticated/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const _authRegisterRoute = _authRegisterRouteImport.update({
  id: '/__auth/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const _authLoginRoute = _authLoginRouteImport.update({
  id: '/__auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/login': typeof _authLoginRoute
  '/register': typeof _authRegisterRoute
  '/': typeof _authenticatedIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/login': typeof _authLoginRoute
  '/register': typeof _authRegisterRoute
  '/': typeof _authenticatedIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/about': typeof AboutRoute
  '/__auth/login': typeof _authLoginRoute
  '/__auth/register': typeof _authRegisterRoute
  '/__authenticated/': typeof _authenticatedIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/login' | '/register' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/login' | '/register' | '/'
  id:
    | '__root__'
    | '/about'
    | '/__auth/login'
    | '/__auth/register'
    | '/__authenticated/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AboutRoute: typeof AboutRoute
  _authLoginRoute: typeof _authLoginRoute
  _authRegisterRoute: typeof _authRegisterRoute
  _authenticatedIndexRoute: typeof _authenticatedIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__authenticated/': {
      id: '/__authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _authenticatedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/register': {
      id: '/__auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof _authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__auth/login': {
      id: '/__auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof _authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  _authLoginRoute: _authLoginRoute,
  _authRegisterRoute: _authRegisterRoute,
  _authenticatedIndexRoute: _authenticatedIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
